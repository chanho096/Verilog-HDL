--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=28 LPM_WIDTH=5 data eq
--VERSION_BEGIN 13.0 cbx_cycloneii 2013:06:12:18:03:40:SJ cbx_lpm_add_sub 2013:06:12:18:03:40:SJ cbx_lpm_compare 2013:06:12:18:03:40:SJ cbx_lpm_decode 2013:06:12:18:03:40:SJ cbx_mgl 2013:06:12:18:04:42:SJ cbx_stratix 2013:06:12:18:03:40:SJ cbx_stratixii 2013:06:12:18:03:40:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_8aa
( 
	data[4..0]	:	input;
	eq[27..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[27..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode3204w[2..0]	: WIRE;
	w_anode3218w[3..0]	: WIRE;
	w_anode3235w[3..0]	: WIRE;
	w_anode3245w[3..0]	: WIRE;
	w_anode3255w[3..0]	: WIRE;
	w_anode3265w[3..0]	: WIRE;
	w_anode3275w[3..0]	: WIRE;
	w_anode3285w[3..0]	: WIRE;
	w_anode3295w[3..0]	: WIRE;
	w_anode3307w[2..0]	: WIRE;
	w_anode3317w[3..0]	: WIRE;
	w_anode3328w[3..0]	: WIRE;
	w_anode3338w[3..0]	: WIRE;
	w_anode3348w[3..0]	: WIRE;
	w_anode3358w[3..0]	: WIRE;
	w_anode3368w[3..0]	: WIRE;
	w_anode3378w[3..0]	: WIRE;
	w_anode3388w[3..0]	: WIRE;
	w_anode3399w[2..0]	: WIRE;
	w_anode3409w[3..0]	: WIRE;
	w_anode3420w[3..0]	: WIRE;
	w_anode3430w[3..0]	: WIRE;
	w_anode3440w[3..0]	: WIRE;
	w_anode3450w[3..0]	: WIRE;
	w_anode3460w[3..0]	: WIRE;
	w_anode3470w[3..0]	: WIRE;
	w_anode3480w[3..0]	: WIRE;
	w_anode3491w[2..0]	: WIRE;
	w_anode3501w[3..0]	: WIRE;
	w_anode3512w[3..0]	: WIRE;
	w_anode3522w[3..0]	: WIRE;
	w_anode3532w[3..0]	: WIRE;
	w_anode3542w[3..0]	: WIRE;
	w_anode3552w[3..0]	: WIRE;
	w_anode3562w[3..0]	: WIRE;
	w_anode3572w[3..0]	: WIRE;
	w_data3202w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[27..0] = eq_wire[27..0];
	eq_wire[] = ( ( w_anode3572w[3..3], w_anode3562w[3..3], w_anode3552w[3..3], w_anode3542w[3..3], w_anode3532w[3..3], w_anode3522w[3..3], w_anode3512w[3..3], w_anode3501w[3..3]), ( w_anode3480w[3..3], w_anode3470w[3..3], w_anode3460w[3..3], w_anode3450w[3..3], w_anode3440w[3..3], w_anode3430w[3..3], w_anode3420w[3..3], w_anode3409w[3..3]), ( w_anode3388w[3..3], w_anode3378w[3..3], w_anode3368w[3..3], w_anode3358w[3..3], w_anode3348w[3..3], w_anode3338w[3..3], w_anode3328w[3..3], w_anode3317w[3..3]), ( w_anode3295w[3..3], w_anode3285w[3..3], w_anode3275w[3..3], w_anode3265w[3..3], w_anode3255w[3..3], w_anode3245w[3..3], w_anode3235w[3..3], w_anode3218w[3..3]));
	w_anode3204w[] = ( (w_anode3204w[1..1] & (! data_wire[4..4])), (w_anode3204w[0..0] & (! data_wire[3..3])), B"1");
	w_anode3218w[] = ( (w_anode3218w[2..2] & (! w_data3202w[2..2])), (w_anode3218w[1..1] & (! w_data3202w[1..1])), (w_anode3218w[0..0] & (! w_data3202w[0..0])), w_anode3204w[2..2]);
	w_anode3235w[] = ( (w_anode3235w[2..2] & (! w_data3202w[2..2])), (w_anode3235w[1..1] & (! w_data3202w[1..1])), (w_anode3235w[0..0] & w_data3202w[0..0]), w_anode3204w[2..2]);
	w_anode3245w[] = ( (w_anode3245w[2..2] & (! w_data3202w[2..2])), (w_anode3245w[1..1] & w_data3202w[1..1]), (w_anode3245w[0..0] & (! w_data3202w[0..0])), w_anode3204w[2..2]);
	w_anode3255w[] = ( (w_anode3255w[2..2] & (! w_data3202w[2..2])), (w_anode3255w[1..1] & w_data3202w[1..1]), (w_anode3255w[0..0] & w_data3202w[0..0]), w_anode3204w[2..2]);
	w_anode3265w[] = ( (w_anode3265w[2..2] & w_data3202w[2..2]), (w_anode3265w[1..1] & (! w_data3202w[1..1])), (w_anode3265w[0..0] & (! w_data3202w[0..0])), w_anode3204w[2..2]);
	w_anode3275w[] = ( (w_anode3275w[2..2] & w_data3202w[2..2]), (w_anode3275w[1..1] & (! w_data3202w[1..1])), (w_anode3275w[0..0] & w_data3202w[0..0]), w_anode3204w[2..2]);
	w_anode3285w[] = ( (w_anode3285w[2..2] & w_data3202w[2..2]), (w_anode3285w[1..1] & w_data3202w[1..1]), (w_anode3285w[0..0] & (! w_data3202w[0..0])), w_anode3204w[2..2]);
	w_anode3295w[] = ( (w_anode3295w[2..2] & w_data3202w[2..2]), (w_anode3295w[1..1] & w_data3202w[1..1]), (w_anode3295w[0..0] & w_data3202w[0..0]), w_anode3204w[2..2]);
	w_anode3307w[] = ( (w_anode3307w[1..1] & (! data_wire[4..4])), (w_anode3307w[0..0] & data_wire[3..3]), B"1");
	w_anode3317w[] = ( (w_anode3317w[2..2] & (! w_data3202w[2..2])), (w_anode3317w[1..1] & (! w_data3202w[1..1])), (w_anode3317w[0..0] & (! w_data3202w[0..0])), w_anode3307w[2..2]);
	w_anode3328w[] = ( (w_anode3328w[2..2] & (! w_data3202w[2..2])), (w_anode3328w[1..1] & (! w_data3202w[1..1])), (w_anode3328w[0..0] & w_data3202w[0..0]), w_anode3307w[2..2]);
	w_anode3338w[] = ( (w_anode3338w[2..2] & (! w_data3202w[2..2])), (w_anode3338w[1..1] & w_data3202w[1..1]), (w_anode3338w[0..0] & (! w_data3202w[0..0])), w_anode3307w[2..2]);
	w_anode3348w[] = ( (w_anode3348w[2..2] & (! w_data3202w[2..2])), (w_anode3348w[1..1] & w_data3202w[1..1]), (w_anode3348w[0..0] & w_data3202w[0..0]), w_anode3307w[2..2]);
	w_anode3358w[] = ( (w_anode3358w[2..2] & w_data3202w[2..2]), (w_anode3358w[1..1] & (! w_data3202w[1..1])), (w_anode3358w[0..0] & (! w_data3202w[0..0])), w_anode3307w[2..2]);
	w_anode3368w[] = ( (w_anode3368w[2..2] & w_data3202w[2..2]), (w_anode3368w[1..1] & (! w_data3202w[1..1])), (w_anode3368w[0..0] & w_data3202w[0..0]), w_anode3307w[2..2]);
	w_anode3378w[] = ( (w_anode3378w[2..2] & w_data3202w[2..2]), (w_anode3378w[1..1] & w_data3202w[1..1]), (w_anode3378w[0..0] & (! w_data3202w[0..0])), w_anode3307w[2..2]);
	w_anode3388w[] = ( (w_anode3388w[2..2] & w_data3202w[2..2]), (w_anode3388w[1..1] & w_data3202w[1..1]), (w_anode3388w[0..0] & w_data3202w[0..0]), w_anode3307w[2..2]);
	w_anode3399w[] = ( (w_anode3399w[1..1] & data_wire[4..4]), (w_anode3399w[0..0] & (! data_wire[3..3])), B"1");
	w_anode3409w[] = ( (w_anode3409w[2..2] & (! w_data3202w[2..2])), (w_anode3409w[1..1] & (! w_data3202w[1..1])), (w_anode3409w[0..0] & (! w_data3202w[0..0])), w_anode3399w[2..2]);
	w_anode3420w[] = ( (w_anode3420w[2..2] & (! w_data3202w[2..2])), (w_anode3420w[1..1] & (! w_data3202w[1..1])), (w_anode3420w[0..0] & w_data3202w[0..0]), w_anode3399w[2..2]);
	w_anode3430w[] = ( (w_anode3430w[2..2] & (! w_data3202w[2..2])), (w_anode3430w[1..1] & w_data3202w[1..1]), (w_anode3430w[0..0] & (! w_data3202w[0..0])), w_anode3399w[2..2]);
	w_anode3440w[] = ( (w_anode3440w[2..2] & (! w_data3202w[2..2])), (w_anode3440w[1..1] & w_data3202w[1..1]), (w_anode3440w[0..0] & w_data3202w[0..0]), w_anode3399w[2..2]);
	w_anode3450w[] = ( (w_anode3450w[2..2] & w_data3202w[2..2]), (w_anode3450w[1..1] & (! w_data3202w[1..1])), (w_anode3450w[0..0] & (! w_data3202w[0..0])), w_anode3399w[2..2]);
	w_anode3460w[] = ( (w_anode3460w[2..2] & w_data3202w[2..2]), (w_anode3460w[1..1] & (! w_data3202w[1..1])), (w_anode3460w[0..0] & w_data3202w[0..0]), w_anode3399w[2..2]);
	w_anode3470w[] = ( (w_anode3470w[2..2] & w_data3202w[2..2]), (w_anode3470w[1..1] & w_data3202w[1..1]), (w_anode3470w[0..0] & (! w_data3202w[0..0])), w_anode3399w[2..2]);
	w_anode3480w[] = ( (w_anode3480w[2..2] & w_data3202w[2..2]), (w_anode3480w[1..1] & w_data3202w[1..1]), (w_anode3480w[0..0] & w_data3202w[0..0]), w_anode3399w[2..2]);
	w_anode3491w[] = ( (w_anode3491w[1..1] & data_wire[4..4]), (w_anode3491w[0..0] & data_wire[3..3]), B"1");
	w_anode3501w[] = ( (w_anode3501w[2..2] & (! w_data3202w[2..2])), (w_anode3501w[1..1] & (! w_data3202w[1..1])), (w_anode3501w[0..0] & (! w_data3202w[0..0])), w_anode3491w[2..2]);
	w_anode3512w[] = ( (w_anode3512w[2..2] & (! w_data3202w[2..2])), (w_anode3512w[1..1] & (! w_data3202w[1..1])), (w_anode3512w[0..0] & w_data3202w[0..0]), w_anode3491w[2..2]);
	w_anode3522w[] = ( (w_anode3522w[2..2] & (! w_data3202w[2..2])), (w_anode3522w[1..1] & w_data3202w[1..1]), (w_anode3522w[0..0] & (! w_data3202w[0..0])), w_anode3491w[2..2]);
	w_anode3532w[] = ( (w_anode3532w[2..2] & (! w_data3202w[2..2])), (w_anode3532w[1..1] & w_data3202w[1..1]), (w_anode3532w[0..0] & w_data3202w[0..0]), w_anode3491w[2..2]);
	w_anode3542w[] = ( (w_anode3542w[2..2] & w_data3202w[2..2]), (w_anode3542w[1..1] & (! w_data3202w[1..1])), (w_anode3542w[0..0] & (! w_data3202w[0..0])), w_anode3491w[2..2]);
	w_anode3552w[] = ( (w_anode3552w[2..2] & w_data3202w[2..2]), (w_anode3552w[1..1] & (! w_data3202w[1..1])), (w_anode3552w[0..0] & w_data3202w[0..0]), w_anode3491w[2..2]);
	w_anode3562w[] = ( (w_anode3562w[2..2] & w_data3202w[2..2]), (w_anode3562w[1..1] & w_data3202w[1..1]), (w_anode3562w[0..0] & (! w_data3202w[0..0])), w_anode3491w[2..2]);
	w_anode3572w[] = ( (w_anode3572w[2..2] & w_data3202w[2..2]), (w_anode3572w[1..1] & w_data3202w[1..1]), (w_anode3572w[0..0] & w_data3202w[0..0]), w_anode3491w[2..2]);
	w_data3202w[2..0] = data_wire[2..0];
END;
--VALID FILE
