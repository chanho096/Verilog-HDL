--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=24 LPM_WIDTH=5 data eq
--VERSION_BEGIN 13.0 cbx_cycloneii 2013:06:12:18:03:40:SJ cbx_lpm_add_sub 2013:06:12:18:03:40:SJ cbx_lpm_compare 2013:06:12:18:03:40:SJ cbx_lpm_decode 2013:06:12:18:03:40:SJ cbx_mgl 2013:06:12:18:04:42:SJ cbx_stratix 2013:06:12:18:03:40:SJ cbx_stratixii 2013:06:12:18:03:40:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_4aa
( 
	data[4..0]	:	input;
	eq[23..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[23..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode2804w[2..0]	: WIRE;
	w_anode2818w[3..0]	: WIRE;
	w_anode2835w[3..0]	: WIRE;
	w_anode2845w[3..0]	: WIRE;
	w_anode2855w[3..0]	: WIRE;
	w_anode2865w[3..0]	: WIRE;
	w_anode2875w[3..0]	: WIRE;
	w_anode2885w[3..0]	: WIRE;
	w_anode2895w[3..0]	: WIRE;
	w_anode2907w[2..0]	: WIRE;
	w_anode2917w[3..0]	: WIRE;
	w_anode2928w[3..0]	: WIRE;
	w_anode2938w[3..0]	: WIRE;
	w_anode2948w[3..0]	: WIRE;
	w_anode2958w[3..0]	: WIRE;
	w_anode2968w[3..0]	: WIRE;
	w_anode2978w[3..0]	: WIRE;
	w_anode2988w[3..0]	: WIRE;
	w_anode2999w[2..0]	: WIRE;
	w_anode3009w[3..0]	: WIRE;
	w_anode3020w[3..0]	: WIRE;
	w_anode3030w[3..0]	: WIRE;
	w_anode3040w[3..0]	: WIRE;
	w_anode3050w[3..0]	: WIRE;
	w_anode3060w[3..0]	: WIRE;
	w_anode3070w[3..0]	: WIRE;
	w_anode3080w[3..0]	: WIRE;
	w_anode3091w[2..0]	: WIRE;
	w_anode3101w[3..0]	: WIRE;
	w_anode3112w[3..0]	: WIRE;
	w_anode3122w[3..0]	: WIRE;
	w_anode3132w[3..0]	: WIRE;
	w_anode3142w[3..0]	: WIRE;
	w_anode3152w[3..0]	: WIRE;
	w_anode3162w[3..0]	: WIRE;
	w_anode3172w[3..0]	: WIRE;
	w_data2802w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[23..0] = eq_wire[23..0];
	eq_wire[] = ( ( w_anode3172w[3..3], w_anode3162w[3..3], w_anode3152w[3..3], w_anode3142w[3..3], w_anode3132w[3..3], w_anode3122w[3..3], w_anode3112w[3..3], w_anode3101w[3..3]), ( w_anode3080w[3..3], w_anode3070w[3..3], w_anode3060w[3..3], w_anode3050w[3..3], w_anode3040w[3..3], w_anode3030w[3..3], w_anode3020w[3..3], w_anode3009w[3..3]), ( w_anode2988w[3..3], w_anode2978w[3..3], w_anode2968w[3..3], w_anode2958w[3..3], w_anode2948w[3..3], w_anode2938w[3..3], w_anode2928w[3..3], w_anode2917w[3..3]), ( w_anode2895w[3..3], w_anode2885w[3..3], w_anode2875w[3..3], w_anode2865w[3..3], w_anode2855w[3..3], w_anode2845w[3..3], w_anode2835w[3..3], w_anode2818w[3..3]));
	w_anode2804w[] = ( (w_anode2804w[1..1] & (! data_wire[4..4])), (w_anode2804w[0..0] & (! data_wire[3..3])), B"1");
	w_anode2818w[] = ( (w_anode2818w[2..2] & (! w_data2802w[2..2])), (w_anode2818w[1..1] & (! w_data2802w[1..1])), (w_anode2818w[0..0] & (! w_data2802w[0..0])), w_anode2804w[2..2]);
	w_anode2835w[] = ( (w_anode2835w[2..2] & (! w_data2802w[2..2])), (w_anode2835w[1..1] & (! w_data2802w[1..1])), (w_anode2835w[0..0] & w_data2802w[0..0]), w_anode2804w[2..2]);
	w_anode2845w[] = ( (w_anode2845w[2..2] & (! w_data2802w[2..2])), (w_anode2845w[1..1] & w_data2802w[1..1]), (w_anode2845w[0..0] & (! w_data2802w[0..0])), w_anode2804w[2..2]);
	w_anode2855w[] = ( (w_anode2855w[2..2] & (! w_data2802w[2..2])), (w_anode2855w[1..1] & w_data2802w[1..1]), (w_anode2855w[0..0] & w_data2802w[0..0]), w_anode2804w[2..2]);
	w_anode2865w[] = ( (w_anode2865w[2..2] & w_data2802w[2..2]), (w_anode2865w[1..1] & (! w_data2802w[1..1])), (w_anode2865w[0..0] & (! w_data2802w[0..0])), w_anode2804w[2..2]);
	w_anode2875w[] = ( (w_anode2875w[2..2] & w_data2802w[2..2]), (w_anode2875w[1..1] & (! w_data2802w[1..1])), (w_anode2875w[0..0] & w_data2802w[0..0]), w_anode2804w[2..2]);
	w_anode2885w[] = ( (w_anode2885w[2..2] & w_data2802w[2..2]), (w_anode2885w[1..1] & w_data2802w[1..1]), (w_anode2885w[0..0] & (! w_data2802w[0..0])), w_anode2804w[2..2]);
	w_anode2895w[] = ( (w_anode2895w[2..2] & w_data2802w[2..2]), (w_anode2895w[1..1] & w_data2802w[1..1]), (w_anode2895w[0..0] & w_data2802w[0..0]), w_anode2804w[2..2]);
	w_anode2907w[] = ( (w_anode2907w[1..1] & (! data_wire[4..4])), (w_anode2907w[0..0] & data_wire[3..3]), B"1");
	w_anode2917w[] = ( (w_anode2917w[2..2] & (! w_data2802w[2..2])), (w_anode2917w[1..1] & (! w_data2802w[1..1])), (w_anode2917w[0..0] & (! w_data2802w[0..0])), w_anode2907w[2..2]);
	w_anode2928w[] = ( (w_anode2928w[2..2] & (! w_data2802w[2..2])), (w_anode2928w[1..1] & (! w_data2802w[1..1])), (w_anode2928w[0..0] & w_data2802w[0..0]), w_anode2907w[2..2]);
	w_anode2938w[] = ( (w_anode2938w[2..2] & (! w_data2802w[2..2])), (w_anode2938w[1..1] & w_data2802w[1..1]), (w_anode2938w[0..0] & (! w_data2802w[0..0])), w_anode2907w[2..2]);
	w_anode2948w[] = ( (w_anode2948w[2..2] & (! w_data2802w[2..2])), (w_anode2948w[1..1] & w_data2802w[1..1]), (w_anode2948w[0..0] & w_data2802w[0..0]), w_anode2907w[2..2]);
	w_anode2958w[] = ( (w_anode2958w[2..2] & w_data2802w[2..2]), (w_anode2958w[1..1] & (! w_data2802w[1..1])), (w_anode2958w[0..0] & (! w_data2802w[0..0])), w_anode2907w[2..2]);
	w_anode2968w[] = ( (w_anode2968w[2..2] & w_data2802w[2..2]), (w_anode2968w[1..1] & (! w_data2802w[1..1])), (w_anode2968w[0..0] & w_data2802w[0..0]), w_anode2907w[2..2]);
	w_anode2978w[] = ( (w_anode2978w[2..2] & w_data2802w[2..2]), (w_anode2978w[1..1] & w_data2802w[1..1]), (w_anode2978w[0..0] & (! w_data2802w[0..0])), w_anode2907w[2..2]);
	w_anode2988w[] = ( (w_anode2988w[2..2] & w_data2802w[2..2]), (w_anode2988w[1..1] & w_data2802w[1..1]), (w_anode2988w[0..0] & w_data2802w[0..0]), w_anode2907w[2..2]);
	w_anode2999w[] = ( (w_anode2999w[1..1] & data_wire[4..4]), (w_anode2999w[0..0] & (! data_wire[3..3])), B"1");
	w_anode3009w[] = ( (w_anode3009w[2..2] & (! w_data2802w[2..2])), (w_anode3009w[1..1] & (! w_data2802w[1..1])), (w_anode3009w[0..0] & (! w_data2802w[0..0])), w_anode2999w[2..2]);
	w_anode3020w[] = ( (w_anode3020w[2..2] & (! w_data2802w[2..2])), (w_anode3020w[1..1] & (! w_data2802w[1..1])), (w_anode3020w[0..0] & w_data2802w[0..0]), w_anode2999w[2..2]);
	w_anode3030w[] = ( (w_anode3030w[2..2] & (! w_data2802w[2..2])), (w_anode3030w[1..1] & w_data2802w[1..1]), (w_anode3030w[0..0] & (! w_data2802w[0..0])), w_anode2999w[2..2]);
	w_anode3040w[] = ( (w_anode3040w[2..2] & (! w_data2802w[2..2])), (w_anode3040w[1..1] & w_data2802w[1..1]), (w_anode3040w[0..0] & w_data2802w[0..0]), w_anode2999w[2..2]);
	w_anode3050w[] = ( (w_anode3050w[2..2] & w_data2802w[2..2]), (w_anode3050w[1..1] & (! w_data2802w[1..1])), (w_anode3050w[0..0] & (! w_data2802w[0..0])), w_anode2999w[2..2]);
	w_anode3060w[] = ( (w_anode3060w[2..2] & w_data2802w[2..2]), (w_anode3060w[1..1] & (! w_data2802w[1..1])), (w_anode3060w[0..0] & w_data2802w[0..0]), w_anode2999w[2..2]);
	w_anode3070w[] = ( (w_anode3070w[2..2] & w_data2802w[2..2]), (w_anode3070w[1..1] & w_data2802w[1..1]), (w_anode3070w[0..0] & (! w_data2802w[0..0])), w_anode2999w[2..2]);
	w_anode3080w[] = ( (w_anode3080w[2..2] & w_data2802w[2..2]), (w_anode3080w[1..1] & w_data2802w[1..1]), (w_anode3080w[0..0] & w_data2802w[0..0]), w_anode2999w[2..2]);
	w_anode3091w[] = ( (w_anode3091w[1..1] & data_wire[4..4]), (w_anode3091w[0..0] & data_wire[3..3]), B"1");
	w_anode3101w[] = ( (w_anode3101w[2..2] & (! w_data2802w[2..2])), (w_anode3101w[1..1] & (! w_data2802w[1..1])), (w_anode3101w[0..0] & (! w_data2802w[0..0])), w_anode3091w[2..2]);
	w_anode3112w[] = ( (w_anode3112w[2..2] & (! w_data2802w[2..2])), (w_anode3112w[1..1] & (! w_data2802w[1..1])), (w_anode3112w[0..0] & w_data2802w[0..0]), w_anode3091w[2..2]);
	w_anode3122w[] = ( (w_anode3122w[2..2] & (! w_data2802w[2..2])), (w_anode3122w[1..1] & w_data2802w[1..1]), (w_anode3122w[0..0] & (! w_data2802w[0..0])), w_anode3091w[2..2]);
	w_anode3132w[] = ( (w_anode3132w[2..2] & (! w_data2802w[2..2])), (w_anode3132w[1..1] & w_data2802w[1..1]), (w_anode3132w[0..0] & w_data2802w[0..0]), w_anode3091w[2..2]);
	w_anode3142w[] = ( (w_anode3142w[2..2] & w_data2802w[2..2]), (w_anode3142w[1..1] & (! w_data2802w[1..1])), (w_anode3142w[0..0] & (! w_data2802w[0..0])), w_anode3091w[2..2]);
	w_anode3152w[] = ( (w_anode3152w[2..2] & w_data2802w[2..2]), (w_anode3152w[1..1] & (! w_data2802w[1..1])), (w_anode3152w[0..0] & w_data2802w[0..0]), w_anode3091w[2..2]);
	w_anode3162w[] = ( (w_anode3162w[2..2] & w_data2802w[2..2]), (w_anode3162w[1..1] & w_data2802w[1..1]), (w_anode3162w[0..0] & (! w_data2802w[0..0])), w_anode3091w[2..2]);
	w_anode3172w[] = ( (w_anode3172w[2..2] & w_data2802w[2..2]), (w_anode3172w[1..1] & w_data2802w[1..1]), (w_anode3172w[0..0] & w_data2802w[0..0]), w_anode3091w[2..2]);
	w_data2802w[2..0] = data_wire[2..0];
END;
--VALID FILE
