--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=25 LPM_WIDTH=5 data eq
--VERSION_BEGIN 13.0 cbx_cycloneii 2013:06:12:18:03:40:SJ cbx_lpm_add_sub 2013:06:12:18:03:40:SJ cbx_lpm_compare 2013:06:12:18:03:40:SJ cbx_lpm_decode 2013:06:12:18:03:40:SJ cbx_mgl 2013:06:12:18:04:42:SJ cbx_stratix 2013:06:12:18:03:40:SJ cbx_stratixii 2013:06:12:18:03:40:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_5aa
( 
	data[4..0]	:	input;
	eq[24..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[24..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode2904w[2..0]	: WIRE;
	w_anode2918w[3..0]	: WIRE;
	w_anode2935w[3..0]	: WIRE;
	w_anode2945w[3..0]	: WIRE;
	w_anode2955w[3..0]	: WIRE;
	w_anode2965w[3..0]	: WIRE;
	w_anode2975w[3..0]	: WIRE;
	w_anode2985w[3..0]	: WIRE;
	w_anode2995w[3..0]	: WIRE;
	w_anode3007w[2..0]	: WIRE;
	w_anode3017w[3..0]	: WIRE;
	w_anode3028w[3..0]	: WIRE;
	w_anode3038w[3..0]	: WIRE;
	w_anode3048w[3..0]	: WIRE;
	w_anode3058w[3..0]	: WIRE;
	w_anode3068w[3..0]	: WIRE;
	w_anode3078w[3..0]	: WIRE;
	w_anode3088w[3..0]	: WIRE;
	w_anode3099w[2..0]	: WIRE;
	w_anode3109w[3..0]	: WIRE;
	w_anode3120w[3..0]	: WIRE;
	w_anode3130w[3..0]	: WIRE;
	w_anode3140w[3..0]	: WIRE;
	w_anode3150w[3..0]	: WIRE;
	w_anode3160w[3..0]	: WIRE;
	w_anode3170w[3..0]	: WIRE;
	w_anode3180w[3..0]	: WIRE;
	w_anode3191w[2..0]	: WIRE;
	w_anode3201w[3..0]	: WIRE;
	w_anode3212w[3..0]	: WIRE;
	w_anode3222w[3..0]	: WIRE;
	w_anode3232w[3..0]	: WIRE;
	w_anode3242w[3..0]	: WIRE;
	w_anode3252w[3..0]	: WIRE;
	w_anode3262w[3..0]	: WIRE;
	w_anode3272w[3..0]	: WIRE;
	w_data2902w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[24..0] = eq_wire[24..0];
	eq_wire[] = ( ( w_anode3272w[3..3], w_anode3262w[3..3], w_anode3252w[3..3], w_anode3242w[3..3], w_anode3232w[3..3], w_anode3222w[3..3], w_anode3212w[3..3], w_anode3201w[3..3]), ( w_anode3180w[3..3], w_anode3170w[3..3], w_anode3160w[3..3], w_anode3150w[3..3], w_anode3140w[3..3], w_anode3130w[3..3], w_anode3120w[3..3], w_anode3109w[3..3]), ( w_anode3088w[3..3], w_anode3078w[3..3], w_anode3068w[3..3], w_anode3058w[3..3], w_anode3048w[3..3], w_anode3038w[3..3], w_anode3028w[3..3], w_anode3017w[3..3]), ( w_anode2995w[3..3], w_anode2985w[3..3], w_anode2975w[3..3], w_anode2965w[3..3], w_anode2955w[3..3], w_anode2945w[3..3], w_anode2935w[3..3], w_anode2918w[3..3]));
	w_anode2904w[] = ( (w_anode2904w[1..1] & (! data_wire[4..4])), (w_anode2904w[0..0] & (! data_wire[3..3])), B"1");
	w_anode2918w[] = ( (w_anode2918w[2..2] & (! w_data2902w[2..2])), (w_anode2918w[1..1] & (! w_data2902w[1..1])), (w_anode2918w[0..0] & (! w_data2902w[0..0])), w_anode2904w[2..2]);
	w_anode2935w[] = ( (w_anode2935w[2..2] & (! w_data2902w[2..2])), (w_anode2935w[1..1] & (! w_data2902w[1..1])), (w_anode2935w[0..0] & w_data2902w[0..0]), w_anode2904w[2..2]);
	w_anode2945w[] = ( (w_anode2945w[2..2] & (! w_data2902w[2..2])), (w_anode2945w[1..1] & w_data2902w[1..1]), (w_anode2945w[0..0] & (! w_data2902w[0..0])), w_anode2904w[2..2]);
	w_anode2955w[] = ( (w_anode2955w[2..2] & (! w_data2902w[2..2])), (w_anode2955w[1..1] & w_data2902w[1..1]), (w_anode2955w[0..0] & w_data2902w[0..0]), w_anode2904w[2..2]);
	w_anode2965w[] = ( (w_anode2965w[2..2] & w_data2902w[2..2]), (w_anode2965w[1..1] & (! w_data2902w[1..1])), (w_anode2965w[0..0] & (! w_data2902w[0..0])), w_anode2904w[2..2]);
	w_anode2975w[] = ( (w_anode2975w[2..2] & w_data2902w[2..2]), (w_anode2975w[1..1] & (! w_data2902w[1..1])), (w_anode2975w[0..0] & w_data2902w[0..0]), w_anode2904w[2..2]);
	w_anode2985w[] = ( (w_anode2985w[2..2] & w_data2902w[2..2]), (w_anode2985w[1..1] & w_data2902w[1..1]), (w_anode2985w[0..0] & (! w_data2902w[0..0])), w_anode2904w[2..2]);
	w_anode2995w[] = ( (w_anode2995w[2..2] & w_data2902w[2..2]), (w_anode2995w[1..1] & w_data2902w[1..1]), (w_anode2995w[0..0] & w_data2902w[0..0]), w_anode2904w[2..2]);
	w_anode3007w[] = ( (w_anode3007w[1..1] & (! data_wire[4..4])), (w_anode3007w[0..0] & data_wire[3..3]), B"1");
	w_anode3017w[] = ( (w_anode3017w[2..2] & (! w_data2902w[2..2])), (w_anode3017w[1..1] & (! w_data2902w[1..1])), (w_anode3017w[0..0] & (! w_data2902w[0..0])), w_anode3007w[2..2]);
	w_anode3028w[] = ( (w_anode3028w[2..2] & (! w_data2902w[2..2])), (w_anode3028w[1..1] & (! w_data2902w[1..1])), (w_anode3028w[0..0] & w_data2902w[0..0]), w_anode3007w[2..2]);
	w_anode3038w[] = ( (w_anode3038w[2..2] & (! w_data2902w[2..2])), (w_anode3038w[1..1] & w_data2902w[1..1]), (w_anode3038w[0..0] & (! w_data2902w[0..0])), w_anode3007w[2..2]);
	w_anode3048w[] = ( (w_anode3048w[2..2] & (! w_data2902w[2..2])), (w_anode3048w[1..1] & w_data2902w[1..1]), (w_anode3048w[0..0] & w_data2902w[0..0]), w_anode3007w[2..2]);
	w_anode3058w[] = ( (w_anode3058w[2..2] & w_data2902w[2..2]), (w_anode3058w[1..1] & (! w_data2902w[1..1])), (w_anode3058w[0..0] & (! w_data2902w[0..0])), w_anode3007w[2..2]);
	w_anode3068w[] = ( (w_anode3068w[2..2] & w_data2902w[2..2]), (w_anode3068w[1..1] & (! w_data2902w[1..1])), (w_anode3068w[0..0] & w_data2902w[0..0]), w_anode3007w[2..2]);
	w_anode3078w[] = ( (w_anode3078w[2..2] & w_data2902w[2..2]), (w_anode3078w[1..1] & w_data2902w[1..1]), (w_anode3078w[0..0] & (! w_data2902w[0..0])), w_anode3007w[2..2]);
	w_anode3088w[] = ( (w_anode3088w[2..2] & w_data2902w[2..2]), (w_anode3088w[1..1] & w_data2902w[1..1]), (w_anode3088w[0..0] & w_data2902w[0..0]), w_anode3007w[2..2]);
	w_anode3099w[] = ( (w_anode3099w[1..1] & data_wire[4..4]), (w_anode3099w[0..0] & (! data_wire[3..3])), B"1");
	w_anode3109w[] = ( (w_anode3109w[2..2] & (! w_data2902w[2..2])), (w_anode3109w[1..1] & (! w_data2902w[1..1])), (w_anode3109w[0..0] & (! w_data2902w[0..0])), w_anode3099w[2..2]);
	w_anode3120w[] = ( (w_anode3120w[2..2] & (! w_data2902w[2..2])), (w_anode3120w[1..1] & (! w_data2902w[1..1])), (w_anode3120w[0..0] & w_data2902w[0..0]), w_anode3099w[2..2]);
	w_anode3130w[] = ( (w_anode3130w[2..2] & (! w_data2902w[2..2])), (w_anode3130w[1..1] & w_data2902w[1..1]), (w_anode3130w[0..0] & (! w_data2902w[0..0])), w_anode3099w[2..2]);
	w_anode3140w[] = ( (w_anode3140w[2..2] & (! w_data2902w[2..2])), (w_anode3140w[1..1] & w_data2902w[1..1]), (w_anode3140w[0..0] & w_data2902w[0..0]), w_anode3099w[2..2]);
	w_anode3150w[] = ( (w_anode3150w[2..2] & w_data2902w[2..2]), (w_anode3150w[1..1] & (! w_data2902w[1..1])), (w_anode3150w[0..0] & (! w_data2902w[0..0])), w_anode3099w[2..2]);
	w_anode3160w[] = ( (w_anode3160w[2..2] & w_data2902w[2..2]), (w_anode3160w[1..1] & (! w_data2902w[1..1])), (w_anode3160w[0..0] & w_data2902w[0..0]), w_anode3099w[2..2]);
	w_anode3170w[] = ( (w_anode3170w[2..2] & w_data2902w[2..2]), (w_anode3170w[1..1] & w_data2902w[1..1]), (w_anode3170w[0..0] & (! w_data2902w[0..0])), w_anode3099w[2..2]);
	w_anode3180w[] = ( (w_anode3180w[2..2] & w_data2902w[2..2]), (w_anode3180w[1..1] & w_data2902w[1..1]), (w_anode3180w[0..0] & w_data2902w[0..0]), w_anode3099w[2..2]);
	w_anode3191w[] = ( (w_anode3191w[1..1] & data_wire[4..4]), (w_anode3191w[0..0] & data_wire[3..3]), B"1");
	w_anode3201w[] = ( (w_anode3201w[2..2] & (! w_data2902w[2..2])), (w_anode3201w[1..1] & (! w_data2902w[1..1])), (w_anode3201w[0..0] & (! w_data2902w[0..0])), w_anode3191w[2..2]);
	w_anode3212w[] = ( (w_anode3212w[2..2] & (! w_data2902w[2..2])), (w_anode3212w[1..1] & (! w_data2902w[1..1])), (w_anode3212w[0..0] & w_data2902w[0..0]), w_anode3191w[2..2]);
	w_anode3222w[] = ( (w_anode3222w[2..2] & (! w_data2902w[2..2])), (w_anode3222w[1..1] & w_data2902w[1..1]), (w_anode3222w[0..0] & (! w_data2902w[0..0])), w_anode3191w[2..2]);
	w_anode3232w[] = ( (w_anode3232w[2..2] & (! w_data2902w[2..2])), (w_anode3232w[1..1] & w_data2902w[1..1]), (w_anode3232w[0..0] & w_data2902w[0..0]), w_anode3191w[2..2]);
	w_anode3242w[] = ( (w_anode3242w[2..2] & w_data2902w[2..2]), (w_anode3242w[1..1] & (! w_data2902w[1..1])), (w_anode3242w[0..0] & (! w_data2902w[0..0])), w_anode3191w[2..2]);
	w_anode3252w[] = ( (w_anode3252w[2..2] & w_data2902w[2..2]), (w_anode3252w[1..1] & (! w_data2902w[1..1])), (w_anode3252w[0..0] & w_data2902w[0..0]), w_anode3191w[2..2]);
	w_anode3262w[] = ( (w_anode3262w[2..2] & w_data2902w[2..2]), (w_anode3262w[1..1] & w_data2902w[1..1]), (w_anode3262w[0..0] & (! w_data2902w[0..0])), w_anode3191w[2..2]);
	w_anode3272w[] = ( (w_anode3272w[2..2] & w_data2902w[2..2]), (w_anode3272w[1..1] & w_data2902w[1..1]), (w_anode3272w[0..0] & w_data2902w[0..0]), w_anode3191w[2..2]);
	w_data2902w[2..0] = data_wire[2..0];
END;
--VALID FILE
